"3.0.0.6"
!  

ViewManager subclass: #WBMiniBrowserExample
  instanceVariableNames: 
    ' selectedClass selectedMethodSelector '
  classVariableNames: ''
  poolDictionaries: 
    ' ColorConstants OperatingSystemConstants '!

!WBMiniBrowserExample methods !   
classSelected: selectedItem

    "Callback for the #changed: event triggered in the ListBox named ''.
     (Generated by WindowBuilder)"

	selectedClass := selectedItem notNil
		ifTrue: [ Smalltalk at: selectedItem asSymbol ]
		ifFalse: [ nil ].
	selectedMethodSelector := nil.
	self updateSelectors.
	self updateText.! !

!WBMiniBrowserExample methods !
updateSelectors
		"Update the method selectors list pane."
	(self paneNamed: 'mbSelectors')
		contents: (
			selectedClass isNil
				ifTrue: [ #( ) ]
				ifFalse: [ self classSelectors ] );
		triggerChanged.! !

!WBMiniBrowserExample methods !  
updateText
		"Update the text pane."
	(self paneNamed: 'mbText') contents: (
		selectedClass isNil ifTrue: [ '' ] ifFalse: [
			selectedMethodSelector isNil
				ifTrue: [ self classText ]
				ifFalse: [ self methodText ] ] ).! !

!WBMiniBrowserExample methods ! 
methodText
		"Answer the selected method source"
	^(selectedClass
		compiledMethodAt: selectedMethodSelector
			) source! !

!WBMiniBrowserExample class methods !  
wbPartEventItems

	"WARNING!! This method was automatically generated by 
	WindowBuilder. Code you add here which does not conform to 
	the WindowBuilder API will probably be lost the next time 
	you save your wb-parts definition."

	#generated.
	^#(#classChanged: #closed #methodChanged: #textChanged:)! !

!WBMiniBrowserExample methods ! 
wbPartMessages

	"WARNING!! This method was automatically generated by 
	WindowBuilder. Code you add here which does not conform to 
	the WindowBuilder API will probably be lost the next time 
	you save your wb-parts definition."

	#generated.
	^WBPARTSMessageList new
		items: #(#close #inspect #open #selectClass: #selectMethod: #text:)
		separators: #( )
		defaultItem: #open;
		addWbItem: (
			WBPartMessage
				source: self
				sourceSelector: #selectClass:
				receiverName: 'mbClasses'
				selector: #selectItemAndTriggerChanged: );
		addWbItem: (
			WBPartMessage
				source: self
				sourceSelector: #selectMethod:
				receiverName: 'mbSelectors'
				selector: #selectItemAndTriggerChanged: );
		addWbItem: (
			WBPartMessage
				source: self
				sourceSelector: #text:
				receiverName: 'mbText'
				selector: #contents: );
		yourself! !

!WBMiniBrowserExample methods !  
methodSelected: selectedItem

    "Callback for the #changed: event triggered in the ListBox named ''.
     (Generated by WindowBuilder)"

	selectedMethodSelector := selectedItem notNil
		ifTrue: [ selectedItem asSymbol ]
		ifFalse: [ nil ].
	self updateText.! !

!WBMiniBrowserExample methods ! 
classText
		"Answer the description for the selected class."
	| stream |
	stream := WriteStream on: (String new: 100).
	selectedClass fileOutOn: stream.
	^stream contents.! !

!WBMiniBrowserExample methods !
wbPartEvents

	"WARNING!! This method was automatically generated by 
	WindowBuilder. Code you add here which does not conform to 
	the WindowBuilder API will probably be lost the next time 
	you save your wb-parts definition."

	#generated.
	^WBPARTSEventList new
		items: self class wbPartEventItems
		separators: #( )
		defaultItem: #classChanged:;
		addWbItem: (
			WBPartEvent
				sourceName: 'mbClasses'
				sourceSelector: #changed:
				receiver: self
				triggeredEvent: #classChanged: );
		addWbItem: (
			WBPartEvent
				sourceName: 'mainView'
				sourceSelector: #closed
				receiver: self
				triggeredEvent: #closed );
		addWbItem: (
			WBPartEvent
				sourceName: 'mbSelectors'
				sourceSelector: #changed:
				receiver: self
				triggeredEvent: #methodChanged: );
		addWbItem: (
			WBPartEvent
				sourceName: 'mbText'
				sourceSelector: #changed:
				receiver: self
				triggeredEvent: #textChanged: );
		yourself! !

!ListBox methods !  
selectItemAndTriggerChanged: anObject
		"Select the specified item and trigger a changed event."
	#addedByOSI.
	self selectItem: anObject.
	self triggerChanged.! !

!WBMiniBrowserExample class methods !  
wbBasicVersion

	"Private - Answer the WindowBuilder Pro version.
		Generated in: Visual Smalltalk Enterprise 3.1.0 Win32"

	^3.1! !

!WBMiniBrowserExample methods !  
classSelectors
		"Answer the method selectors for the selected class."
	^selectedClass selectors asSortedCollection asArray
		collect: [ :each | each asString ]! !

!WBMiniBrowserExample methods ! 
createViews

	"WARNING!! This method was automatically generated by 
	WindowBuilder. Code you add here which does not conform to 
	the WindowBuilder API will probably be lost the next time 
	you save your layout definition."

	| mainView mbClasses mbSelectors mbText xDU yDU |
	
	#generated.
	xDU := (SysFont width + 1 roundTo: 2) / 4.
	yDU := SysFont height / 8.
	mainView := self topPaneClass new.
	
		"Temporary Variables"
	mbClasses := ListBox new.
	mbSelectors := ListBox new.
	mbText := TextEdit new.
	
	mainView
		owner: self;
		setName: 'mainView';
		labelWithoutPrefix: 'Mini Browser';
		noSmalltalkMenuBar;
		backColor: Color gray;
		framingBlock: 
			(LayoutFrame new
				leftRatio: 1/2; leftInset: -78 * xDU;
				topRatio: 1/2; topInset: -56 * yDU;
				rightRatio: 1/2; rightInset: -78 * xDU;
				bottomRatio: 1/2; bottomInset: -56 * yDU).
	self addView: mainView.
	
	mbClasses "ListBox"
		owner: self;
		setName: 'mbClasses';
		when: #changed: send: #classSelected: to: self;
		framingBlock: 
			(LayoutFrame new
				leftRatio: 0; leftInset: 0 * xDU;
				topRatio: 0; topInset: 0 * yDU;
				rightRatio: 36/73; rightInset: 0 * xDU;
				bottomRatio: 84/173; bottomInset: 0 * yDU);
		startGroup;
		font: SysFont;
		contents: #( 'Array' 'Dictionary' 'OrderedCollection' 'Point' 'Rectangle' 'Set' ).
	mainView
		addSubpane: mbClasses;
		subPaneWithFocus: mbClasses.
	
	mbSelectors "ListBox"
		owner: self;
		setName: 'mbSelectors';
		when: #changed: send: #methodSelected: to: self;
		framingBlock: 
			(LayoutFrame new
				leftRatio: 36/73; leftInset: 0 * xDU;
				topRatio: 0; topInset: 0 * yDU;
				rightRatio: 1; rightInset: 0 * xDU;
				bottomRatio: 84/173; bottomInset: 0 * yDU);
		startGroup;
		font: SysFont.
	mainView addSubpane: mbSelectors.
	
	mbText "TextEdit"
		owner: self;
		setName: 'mbText';
		framingBlock: 
			(LayoutFrame new
				leftRatio: 0; leftInset: 0 * xDU;
				topRatio: 84/173; topInset: 0 * yDU;
				rightRatio: 1; rightInset: 0 * xDU;
				bottomRatio: 1; bottomInset: 0 * yDU);
		addHorizontalScrollbarStyle;
		addVerticalScrollbarStyle;
		startGroup;
		noTabStop;
		font: SysFont.
	mainView addSubpane: mbText! !
   
UndefinedObject removeSelector: #osiIgnoredInitializerSource!
   
"======== Initializers"!